name: CI/CD

on:
  push:
    branches:
      - main
      - dev
      - 'feature/*'
  pull_request:
    branches:
      - main
      - dev
      - 'feature/*'
  workflow_dispatch:
    inputs:
      branch:
        description: 'Escolha a branch para o deploy'
        required: true
        default: 'main'
        type: string

jobs:
  # Job para o Build
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.inputs.branch }}

      - name: Set up .NET 8
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '8.0.x'

      - name: Build .NET application
        working-directory: ./back/entrypoint/webapi  # Caminho para o diretório da aplicação
        run: dotnet build --configuration Release

      - name: Run .NET tests
        working-directory: ./back/entrypoint/webapi  # Caminho para o diretório da aplicação
        run: dotnet test --configuration Release

      - name: Publish .NET application
        working-directory: ./back/entrypoint/webapi  # Caminho para o diretório da aplicação
        run: |
          dotnet publish -c Release -o ./publish

  # Job para o Publish (Deploy) no Azure Web App
  publish:
    runs-on: ubuntu-latest
    needs: build  # Espera o job "build" finalizar com sucesso
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.inputs.branch }}

      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Deploy to Azure Web App
        uses: azure/webapps-deploy@v2
        with:
          app-name: ${{ secrets.AZURE_WEBAPP_NAME }}
          package: './back/entrypoint/webapi/publish'  # Caminho para o diretório com a versão publicada

  docker:
    runs-on: ubuntu-latest
    needs: build  # Espera o job "build" finalizar com sucesso
    steps:
      - name: Build Docker image
        run: docker build -t my-image:latest ./back/entrypoint/webapi  # Caminho para o diretório do Dockerfile

      - name: Push Docker image to Google Container Registry
        env:
          SQL_SERVER_SECRET: ${{ secrets.SQL_SERVER_SECRET }}
        run: |
          echo "${{ secrets.GCP_SA_KEY }}" | gcloud auth activate-service-account --key-file=-
          gcloud config set project ${{ secrets.GCP_PROJECT_ID }}
          gcloud auth configure-docker
          docker push gcr.io/${{ secrets.GCP_PROJECT_ID }}/webapi:latest
