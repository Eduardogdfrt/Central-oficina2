name: CI/CD

on:
  push:
    branches:
      - main
      - dev
      - 'feature/*'  
  pull_request:
    branches:
      - main
      - dev
      - 'feature/*'

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:latest
        ports:
          - 3306:3306
        env:
          MYSQL_ROOT_PASSWORD: admin
          MYSQL_DATABASE: ELLP
          MYSQL_USER: admin
          MYSQL_PASSWORD: admin
        options: >-
          --health-cmd "mysqladmin ping --silent"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 3

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up .NET 8
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '8.0.x'

      - name: Build .NET application
        working-directory: ./novapasta/back/entrypoint/WebApplication1/WebApi
        run: dotnet build --configuration Release

      - name: Run database migrations or seed data
        run: |
          docker exec my_mysql sh -c 'exec mysql -uroot -p"$MYSQL_ROOT_PASSWORD" ELLP < /docker-entrypoint-initdb.d/backup_ellp.sql'

      - name: Run .NET tests
        working-directory: ./novapasta/back/entrypoint/WebApplication1/WebApi
        run: dotnet test --configuration Release

      - name: Build Docker image
        run: docker build -t myapp/webapi:latest ./novapasta/back/entrypoint/WebApplication1/WebApi

      - name: Push Docker image to Docker Hub
        env:
          MYSQL_CONNECTION_STRING: ${{ secrets.MYSQL_CONNECTION_STRING }}
        run: |
          echo "${{ secrets.DOCKER_USERNAME }}" | docker login --username ${{ secrets.DOCKER_USERNAME }} --password-stdin
          docker push myapp/webapi:latest

      - name: Deploy to production
        run: |
          echo "Deploying to production..."
          # Adicione aqui a lÃ³gica de deploy para o seu servidor, por exemplo, via SSH ou outras ferramentas
