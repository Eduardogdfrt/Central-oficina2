name: CI/CD

on:
  push:
    branches:
      - main
      - dev
      - 'feature/*'
  pull_request:
    branches:
      - main
      - dev
      - 'feature/*'
  workflow_dispatch:
    inputs:
      branch:
        description: 'Escolha a branch para executar'
        required: true
        default: 'main'
        type: string

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        ref: ${{ github.event.inputs.branch || github.ref }}

    - name: Set up .NET 8
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: '8.0.x'

    - name: Build .NET application
      working-directory: ./Back
      run: dotnet build --configuration Release

    - name: Run .NET tests
      working-directory: ./Back
      run: dotnet test --configuration Release

  publish:
    runs-on: ubuntu-latest
    needs: build
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        ref: ${{ github.event.inputs.branch || github.ref }}

    - name: Set up Docker
      run: |
        sudo apt-get update
        sudo apt-get install -y docker.io

    - name: Build Docker image
      working-directory: ./Back/Entrypoint/WebApi
      run: docker build -t myapp-webapi .  # Garante que o Dockerfile correto será encontrado

    - name: Publish Docker image to Azure Container Registry (ACR)
      run: |
        docker tag myapp-webapi:latest myregistry.azurecr.io/myapp-webapi:latest
        docker push myregistry.azurecr.io/myapp-webapi:latest

    - name: Deploy to Azure Web App
      uses: azure/webapps-deploy@v2
      with:
        app-name: "my-azure-app"  # Substitua com o nome real da sua aplicação no Azure
        publish-profile: ${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE }}
        package: ./Back/Entrypoint/WebApi/out  # O pacote a ser publicado (saída do dotnet publish)
        connection-string: ${{ secrets.SQL_SERVER_SECRET }}

    - name: Clean up
      run: docker system prune -af
