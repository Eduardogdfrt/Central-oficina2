name: Automatic Deploy to Development and Homologation

on:
  push:
    branches:
      - main
      - release

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Login to Azure
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Set environment variables
        id: set-env
        run: |
          if [[ "${{ github.ref }}" == "refs/heads/main" ]]; then
            echo "env=dev" >> $GITHUB_ENV
            echo "app_service=CentralOficina2-Dev" >> $GITHUB_ENV
          elif [[ "${{ github.ref }}" == "refs/heads/release" ]]; then
            echo "env=hml" >> $GITHUB_ENV
            echo "app_service=CentralOficina2-Hml" >> $GITHUB_ENV
          fi

      - name: Build Docker image
        run: |
          docker build -t ${{ secrets.ACR_LOGIN_SERVER }}/central-oficina2:${{ env.env }} .

      - name: Login to ACR
        run: |
          echo ${{ secrets.ACR_PASSWORD }} | docker login ${{ secrets.ACR_LOGIN_SERVER }} -u ${{ secrets.ACR_USERNAME }} --password-stdin

      - name: Push Docker image to ACR
        run: |
          docker push ${{ secrets.ACR_LOGIN_SERVER }}/central-oficina2:${{ env.env }}

      - name: Configure App Service to use ACR image
        run: |
          az webapp config container set \
            --name ${{ env.app_service }} \
            --resource-group CentralOficina2-RG \
            --docker-custom-image-name ${{ secrets.ACR_LOGIN_SERVER }}/central-oficina2:${{ env.env }} \
            --docker-registry-server-url https://${{ secrets.ACR_LOGIN_SERVER }} \
            --docker-registry-server-user ${{ secrets.ACR_USERNAME }} \
            --docker-registry-server-password ${{ secrets.ACR_PASSWORD }}
