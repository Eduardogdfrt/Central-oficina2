name: Deploy to Hml on Release Changes

on:
  push:
    branches:
      - release
      - Feature/Fabio
    paths:
      - 'Back/**'
      - 'front/**'
      - '.github/workflows/deploy-hml.yml'
      - 'docker-compose.yml'

jobs:
  deploy-to-hml:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to Azure
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Login to Azure Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ secrets.ACR_LOGIN_SERVER }}
          username: ${{ secrets.ACR_USERNAME }}
          password: ${{ secrets.ACR_PASSWORD }}

      # Build e Push das imagens usando docker-compose
      - name: Build and Push Images
        run: |
          # Primeiro, construir o frontend
          docker-compose build front
          docker tag central-oficina2_front:latest ${{ secrets.ACR_LOGIN_SERVER }}/central-oficina2-frontend:hml
          docker push ${{ secrets.ACR_LOGIN_SERVER }}/central-oficina2-frontend:hml

          # Depois, construir o backend
          docker-compose build back
          docker tag central-oficina2_back:latest ${{ secrets.ACR_LOGIN_SERVER }}/central-oficina2:hml
          docker push ${{ secrets.ACR_LOGIN_SERVER }}/central-oficina2:hml

      - name: Verify App Service exists
        run: |
          echo "Verifying App Service exists..."
          if ! az webapp show --name centralOficina2-Hml --resource-group CentralOficina2-Hml &>/dev/null; then
            echo "App Service not found. Creating it..."
            az webapp create \
              --name centralOficina2-Hml \
              --resource-group CentralOficina2-Hml \
              --plan CentralOficina2Plan \
              --runtime "DOCKER|linux"
          fi

      - name: Configure App Service
        run: |
          echo "Configuring App Service..."
          az webapp config container set \
            --name centralOficina2-Hml \
            --resource-group CentralOficina2-Hml \
            --container-image-name ${{ secrets.ACR_LOGIN_SERVER }}/central-oficina2:hml \
            --container-registry-url https://${{ secrets.ACR_LOGIN_SERVER }} \
            --container-registry-user ${{ secrets.ACR_USERNAME }} \
            --container-registry-password ${{ secrets.ACR_PASSWORD }}

      - name: Validate Deployments
        run: |
          echo "Validating deployments..."
          
          # Validate Backend
          backend_status=$(az webapp show --name centralOficina2-Hml --resource-group CentralOficina2-Hml --query state -o tsv)
          echo "Backend Deployment Status: $backend_status"
          if [ "$backend_status" != "Running" ]; then
            echo "WARNING: Backend App Service is not in Running state"
            exit 1
          fi
          
          # Validate Frontend
          frontend_status=$(az webapp show --name centralOficina2-frontend-hml --resource-group CentralOficina2-Hml --query state -o tsv)
          echo "Frontend Deployment Status: $frontend_status"
          if [ "$frontend_status" != "Running" ]; then
            echo "WARNING: Frontend App Service is not in Running state"
            exit 1
          fi

      - name: Deployment Summary
        run: |
          echo "Deployment Summary:"
          echo "Backend:"
          echo "- Image: ${{ secrets.ACR_LOGIN_SERVER }}/central-oficina2:hml"
          echo "- App Service: centralOficina2-Hml"
          echo "Frontend:"
          echo "- Image: ${{ secrets.ACR_LOGIN_SERVER }}/central-oficina2-frontend:hml"
          echo "- App Service: centralOficina2-frontend-hml"
          echo "Resource Group: CentralOficina2-Hml"
          echo "Status: Success"