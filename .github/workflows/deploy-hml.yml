name: Deploy to Hml on Release Changes

on:
  push:
    branches:
      - release
      - Feature/Fabio
    paths:
      - 'Back/**'
      - 'front/**'
      - '.github/workflows/deploy-hml.yml'

jobs:
  deploy-to-hml:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to Azure
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Login to Azure Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ secrets.ACR_LOGIN_SERVER }}
          username: ${{ secrets.ACR_USERNAME }}
          password: ${{ secrets.ACR_PASSWORD }}

      - name: Build and Push Combined Docker image
        uses: docker/build-push-action@v5
        with:
          context: .  # Usando o contexto raiz
          file: ./Back/Dockerfile
          push: true
          tags: ${{ secrets.ACR_LOGIN_SERVER }}/central-oficina2:hml
          cache-from: type=registry,ref=${{ secrets.ACR_LOGIN_SERVER }}/central-oficina2:hml
          cache-to: type=inline

      - name: Verify App Service exists
        run: |
          echo "Verifying App Service exists..."
          if ! az webapp show --name centralOficina2-Hml --resource-group CentralOficina2-Hml &>/dev/null; then
            echo "App Service not found. Creating it..."
            az webapp create \
              --name centralOficina2-Hml \
              --resource-group CentralOficina2-Hml \
              --plan CentralOficina2Plan \
              --runtime "DOCKER|linux"
          fi

      - name: Configure App Service
        run: |
          echo "Configuring App Service..."
          az webapp config container set \
            --name centralOficina2-Hml \
            --resource-group CentralOficina2-Hml \
            --container-image-name ${{ secrets.ACR_LOGIN_SERVER }}/central-oficina2:hml \
            --container-registry-url https://${{ secrets.ACR_LOGIN_SERVER }} \
            --container-registry-user ${{ secrets.ACR_USERNAME }} \
            --container-registry-password ${{ secrets.ACR_PASSWORD }}

      - name: Configure App Settings
        run: |
          echo "Configuring App Settings..."
          az webapp config appsettings set \
            --name centralOficina2-Hml \
            --resource-group CentralOficina2-Hml \
            --settings \
            WEBSITES_PORT=5000 \
            ASPNETCORE_ENVIRONMENT=Development \
            ASPNETCORE_URLS=http://+:5000

      - name: Configure CORS
        run: |
          echo "Configuring CORS..."
          az webapp cors add \
            --name centralOficina2-Hml \
            --resource-group CentralOficina2-Hml \
            --allowed-origins "*"

      - name: Restart App Service
        run: |
          echo "Restarting App Service..."
          az webapp restart --name centralOficina2-Hml --resource-group CentralOficina2-Hml

      - name: Wait for App Service to Start
        run: |
          echo "Waiting for App Service to start..."
          sleep 30  # Aguarda 30 segundos para o servi√ßo inicializar

      - name: Validate Deployment
        run: |
          echo "Validating deployment..."
          deployment_status=$(az webapp show --name centralOficina2-Hml --resource-group CentralOficina2-Hml --query state -o tsv)
          echo "Deployment Status: $deployment_status"
          if [ "$deployment_status" != "Running" ]; then
            echo "WARNING: App Service is not in Running state"
            exit 1
          fi

      - name: Deployment Summary
        run: |
          echo "Deployment Summary:"
          echo "- Image: ${{ secrets.ACR_LOGIN_SERVER }}/central-oficina2:hml"
          echo "- App Service: centralOficina2-Hml"
          echo "- Resource Group: CentralOficina2-Hml"
          echo "- URL: https://centraloficina2-hml.azurewebsites.net"
          echo "Status: Success"